class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        res=[]
        def backtrack(start,curr_combination,curr_sum):
            if curr_sum==target:
              result.append(curr_combination[:])
              return
            if curr_sum>target:
             return
            for i in range(start,len(candidates)):
               curr_combination.append(candidates[i])
                backtrack(i,curr_combination,curr_sum+candidates[i])
                curr_combination.pop()
        
        backtrack(0, [], 0)
        return res
